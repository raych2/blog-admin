{"version":3,"sources":["components/shared/NavLink.js","components/NavigationLinks.js","components/BurgerMenu.js","components/Nav.js","components/PostPreview.js","components/shared/LoadingIndicator.js","components/shared/ErrorMessage.js","components/Home.js","components/shared/SuccessMessage.js","components/SignUp.js","components/Login.js","components/PostForm.js","components/CommentDetail.js","components/PostEditor.js","App.js","index.js"],"names":["NavLink","styled","Link","LinkList","ul","open","NavigationLinks","setAuthorizedUser","setUserData","setOpen","to","onClick","e","localStorage","setItem","StyledBurger","div","BurgerMenu","useState","Navbar","nav","Nav","authorizedUser","className","IndividualPost","PostContainer","Info","Author","p","Text","Data","PostLink","PostPreview","props","id","post","_id","title","author","username","published","postDate","comments","postText","text","substring","parseEntities","DOMParser","parseFromString","body","innerText","length","SpinnerContainer","LoadingIndicator","name","color","ErrorMessage","PostList","Home","userData","blogPosts","setBlogPosts","loading","setLoading","error","setError","blogAPI","useEffect","a","fetch","response","json","data","postsByUser","posts","filter","console","log","fetchBlogAPI","map","index","SuccessMessage","SignUpForm","InlineNavLink","SignUp","setUsername","password","setPassword","message","setMessage","navigate","useNavigate","signUpUser","preventDefault","method","headers","JSON","stringify","result","errors","signUpErrors","forEach","push","msg","setTimeout","onSubmit","htmlFor","value","type","onChange","target","required","LoginForm","Login","logInUser","auth","token","NewPost","PostForm","setTitle","setText","getItem","createNewPost","Authorization","errorMessages","rows","cols","maxLength","CommentContainer","CommentHeader","CommentDetail","comment","commentDate","commentId","params","useParams","deleteComment","status","icon","faTrashAlt","Editor","FormButtons","PostEditor","setComments","fetchBlogPostAPI","updatePost","updateErrors","publishPost","deletePost","defaultValue","App","user","basename","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c81176a2.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst NavLink = styled(Link)`\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  display: block;\n  color: #ffffff;\n`;\n\nexport default NavLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport NavLink from './shared/NavLink';\n\nconst LinkList = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  li {\n    list-style-type: none;\n    padding: 1rem;\n    &:hover {\n      color: #14213d;\n      background-color: #e5e5e5;\n    }\n  }\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    flex-flow: column nowrap;\n    background-color: #14213d;\n    position: fixed;\n    transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(100%)')};\n    top: 3.5rem;\n    right: 0;\n    height: 15vh;\n    width: 100vw;\n    padding-top: 0;\n    transition: transform 0.3s ease-in-out;\n  }\n`;\n\nconst NavigationLinks = ({ setAuthorizedUser, setUserData, open, setOpen }) => {\n  const logOut = (e) => {\n    localStorage.setItem('bearer', '');\n    setAuthorizedUser(false);\n    setUserData('');\n  };\n\n  return (\n    <>\n      <LinkList open={open}>\n        <NavLink to=\"/posts/create\" onClick={() => setOpen(!open)}>\n          <li>Create post</li>\n        </NavLink>\n        <NavLink onClick={logOut} to=\"/\">\n          <li>Log out</li>\n        </NavLink>\n      </LinkList>\n    </>\n  );\n};\n\nexport default NavigationLinks;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport NavigationLinks from './NavigationLinks';\n\nconst StyledBurger = styled.div`\n  width: 2rem;\n  height: 2rem;\n  position: fixed;\n  top: 15px;\n  right: 20px;\n  z-index: 20;\n  display: none;\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    display: flex;\n    justify-content: space-around;\n    flex-flow: column nowrap;\n  }\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background-color: ${({ open }) => (open ? '#ca7d02' : '#fff')};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.3s linear;\n    &:nth-child(1) {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => (open ? 'translateX(100%)' : 'translateX(0)')};\n      opacity: ${({ open }) => (open ? 0 : 1)};\n    }\n    &:nth-child(3) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\n    }\n  }\n`;\n\nconst BurgerMenu = ({ setAuthorizedUser, setUserData }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <StyledBurger open={open} onClick={() => setOpen(!open)}>\n        <div />\n        <div />\n        <div />\n      </StyledBurger>\n      <NavigationLinks\n        open={open}\n        setOpen={setOpen}\n        setAuthorizedUser={setAuthorizedUser}\n        setUserData={setUserData}\n      />\n    </>\n  );\n};\n\nexport default BurgerMenu;\n","import React from 'react';\nimport styled from 'styled-components';\nimport NavLink from './shared/NavLink';\nimport BurgerMenu from './BurgerMenu';\n\nconst Navbar = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  background-color: #14213d;\n  .public,\n  .authorized {\n    font-weight: 400;\n    color: #ffffff;\n  }\n  .public {\n    margin: 1rem;\n  }\n  .authorized {\n    margin-left: 1rem;\n  }\n  @media (max-width: 400px) {\n    .authorized {\n      margin: 1rem;\n    }\n  }\n`;\n\nconst Nav = ({ authorizedUser, setAuthorizedUser, setUserData }) => {\n  return (\n    <Navbar>\n      {authorizedUser ? (\n        <>\n          <NavLink to=\"/\">\n            <h1 className=\"authorized\">TOP Blog Admin</h1>\n          </NavLink>\n          <BurgerMenu setAuthorizedUser={setAuthorizedUser} setUserData={setUserData}/>\n        </>\n      ) : (\n        <NavLink to=\"/\">\n          <h1 className=\"public\">TOP Blog Admin</h1>\n        </NavLink>\n      )}\n    </Navbar>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst IndividualPost = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n`;\nconst PostContainer = styled.div`\n  height: auto;\n  width: 50vw;\n  margin: 10px 0;\n  padding: 20px;\n  background: #ffffff;\n  border: 0.5px solid #7a7a7a;\n  border-radius: 5px;\n\n  h2 {\n    margin: 5px auto;\n  }\n  hr {\n    margin: 10px auto;\n    border: none;\n    border-top: 1px solid #000;\n  }\n  .published {\n    color: #466ec3;\n  }\n  .unpublished {\n    color: #ca7d02;\n  }\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    width: 80vw;\n  }\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    width: 90%;\n  }\n`;\nconst Info = styled.div`\n  max-width: 100%;\n  text-align: left;\n`;\nconst Author = styled.p`\n  margin: 5px auto;\n`;\nconst Text = styled.div`\n  margin: 10px auto;\n`;\nconst Data = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  max-width: 100%;\n  margin: 0 auto;\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    flex-direction: column;\n  }\n`;\nconst PostLink = styled(Link)`\n  &:focus,\n  &:hover,\n  &:visited,\n  &:link,\n  &:active {\n    text-decoration: none;\n  }\n  color: #000;\n`;\n\nconst PostPreview = (props) => {\n  const id = props.post._id;\n  const title = props.post.title;\n  const author = props.post.author.username;\n  const published = props.post.published;\n  const postDate = props.post.postDate;\n  const comments = props.post.comments;\n  const postText = props.post.text.substring(0, 75) + '...';\n  const parseEntities = (text) =>\n    new DOMParser().parseFromString(text, 'text/html').body.innerText;\n\n  return (\n    <IndividualPost>\n      <PostContainer>\n        <Info>\n          <PostLink to={`/posts/${id}`}>\n            <h2>{parseEntities(title)}</h2>\n          </PostLink>\n          <Author>By: {author}</Author>\n          <Text>{parseEntities(postText)}</Text>\n        </Info>\n        <hr />\n        <Data>\n          <div>\n            <p>{postDate}</p>\n            {comments.length === 0 ? (\n              <p>No comments</p>\n            ) : comments.length === 1 ? (\n              <p>{comments.length} Comment</p>\n            ) : (\n              <p>{comments.length} Comments</p>\n            )}\n          </div>\n          {published ? (\n            <p className=\"published\">Published</p>\n          ) : (\n            <p className=\"unpublished\">Unpublished</p>\n          )}\n        </Data>\n      </PostContainer>\n    </IndividualPost>\n  );\n};\n\nexport default PostPreview;\n","import styled from 'styled-components';\nimport Spinner from 'react-spinkit';\n\nconst SpinnerContainer = styled.div`\n  margin-top: 200px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n`;\n\nconst LoadingIndicator = () => {\n  return (\n    <SpinnerContainer>\n      <Spinner name=\"ball-spin-fade-loader\" color=\"#FCA311\" />\n    </SpinnerContainer>\n  );\n};\n\nexport default LoadingIndicator;\n","import styled from 'styled-components';\n\nconst ErrorMessage = styled.div`\n  margin: 10px 0;\n  color: #a9232e;\n`;\n\nexport default ErrorMessage;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PostPreview from './PostPreview';\nimport LoadingIndicator from './shared/LoadingIndicator';\nimport ErrorMessage from './shared/ErrorMessage';\n\nconst PostList = styled.div`\n  margin-top: 80px;\n  display: flex;\n  flex-flow: column nowrap;\n  align-content: space-evenly;\n\n  h1 {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n`;\n\nconst Home = ({ userData }) => {\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const blogAPI = 'https://rt-blog-api.herokuapp.com/posts';\n\n  useEffect(() => {\n    async function fetchBlogAPI() {\n      setError(false);\n      setLoading(true);\n      try {\n        const response = await fetch(blogAPI);\n        const data = await response.json();\n        const postsByUser = data.posts.filter(\n          (post) => post.author.username === userData\n        );\n        setBlogPosts(postsByUser);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      }\n      setLoading(false);\n    }\n\n    fetchBlogAPI();\n  }, []);\n  return (\n    <div>\n      {error && <ErrorMessage>An error occurred</ErrorMessage>}\n      {loading ? (\n        <LoadingIndicator />\n      ) : (\n        <PostList>\n          <h1>Welcome {userData}!</h1>\n          {blogPosts.map((post, index) => {\n            return (\n              <div key={post._id}>\n                <PostPreview post={blogPosts[index]} />\n              </div>\n            );\n          })}\n        </PostList>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nconst SuccessMessage = styled.div`\n  margin: 10px 0;\n  color: #ca7d02;\n`;\n\nexport default SuccessMessage;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport NavLink from './shared/NavLink';\nimport ErrorMessage from './shared/ErrorMessage';\nimport SuccessMessage from './shared/SuccessMessage';\nimport { useNavigate } from 'react-router-dom';\n\nconst SignUpForm = styled.div`\n  margin: 80px auto 0 auto;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n  width: 20vw;\n\n  form {\n    margin: 20px auto;\n    width: 100%;\n  }\n\n  input {\n    font-size: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    border-radius: 3px;\n    border: 1px solid #7a7a7a;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n\n  #username,\n  #password {\n    display: block;\n    width: 100%;\n    height: 40px;\n    margin: 10px auto;\n    font-size: 1em;\n    padding-left: 5px;\n  }\n  .submit {\n    margin-right: 10px;\n    padding: 10px;\n    text-align: center;\n    color: #ffffff;\n    background-color: #000000;\n    border-color: #7a7a7a;\n    border-radius: 3px;\n    font-weight: 100;\n  }\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    form {\n      width: 50vw;\n    }\n  }\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    width: 90%;\n  }\n`;\nconst InlineNavLink = styled(NavLink)`\n  display: inline;\n  color: #fca311;\n`;\n\nconst SignUp = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  let navigate = useNavigate();\n\n  const signUpUser = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://rt-blog-api.herokuapp.com/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      });\n      const result = await response.json();\n      if (result.errors) {\n        let signUpErrors = [];\n        result.errors.forEach((error) => {\n          signUpErrors.push(`${error.msg} `);\n        });\n        setError(signUpErrors);\n      } else {\n        setError('');\n        setMessage(\n          `${result.message}. You'll be redirected to the Login page to log in.`\n        );\n        setTimeout(() => {\n          navigate('/login');\n        }, 3000);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <SignUpForm>\n      <h1>Sign up</h1>\n      <form onSubmit={signUpUser}>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          value={username}\n          type=\"text\"\n          id=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          value={password}\n          type=\"password\"\n          id=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n      </form>\n      <div>\n        Already have an account?{' '}\n        <InlineNavLink to=\"/login\">Log in</InlineNavLink>\n      </div>\n      {error ? <ErrorMessage>Error: {error}</ErrorMessage> : <></>}\n      <SuccessMessage>{message}</SuccessMessage>\n    </SignUpForm>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport NavLink from './shared/NavLink';\nimport ErrorMessage from './shared/ErrorMessage';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginForm = styled.div`\n  margin: 80px auto 0 auto;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n\n  form {\n    margin: 20px auto;\n    width: 20vw;\n  }\n\n  input {\n    font-size: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    border-radius: 3px;\n    border: 1px solid #7a7a7a;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n\n  #username,\n  #password {\n    display: block;\n    width: 100%;\n    height: 40px;\n    margin: 10px auto;\n    font-size: 1em;\n    padding-left: 5px;\n  }\n  .submit {\n    margin-right: 10px;\n    padding: 10px;\n    text-align: center;\n    color: #ffffff;\n    background-color: #000000;\n    border-color: #7a7a7a;\n    border-radius: 3px;\n    font-weight: 100;\n  }\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    form {\n      width: 50vw;\n    }\n  }\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    form {\n      width: 90%;\n    }\n  }\n`;\nconst InlineNavLink = styled(NavLink)`\n  display: inline;\n  color: #fca311;\n`;\n\nconst Login = ({ setAuthorizedUser, setUserData }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  let navigate = useNavigate();\n\n  const logInUser = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://rt-blog-api.herokuapp.com/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      });\n      const auth = await response.json();\n      if (auth.token) {\n        localStorage.setItem('bearer', auth.token);\n        localStorage.setItem('name', username);\n        setUserData(username);\n        setAuthorizedUser(true);\n        navigate('/posts');\n      } else {\n        setError(auth.message);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <LoginForm>\n      <h1>Log in</h1>\n      <form onSubmit={logInUser}>\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          value={username}\n          type=\"text\"\n          id=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          value={password}\n          type=\"password\"\n          id=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n      </form>\n      <div>\n        Don't have an account?{' '}\n        <InlineNavLink to=\"/signup\">Sign up</InlineNavLink>\n      </div>\n      {error ? <ErrorMessage>Error: {error}</ErrorMessage> : <></>}\n    </LoginForm>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ErrorMessage from './shared/ErrorMessage';\nimport SuccessMessage from './shared/SuccessMessage';\nimport styled from 'styled-components';\n\nconst NewPost = styled.div`\n  margin: 80px auto 0 auto;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n  form {\n    margin: 20px auto;\n    width: 40vw;\n  }\n  input,\n  button {\n    font-size: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    border-radius: 3px;\n    border: 1px solid #7a7a7a;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n  #newPostTitle {\n    display: block;\n    width: 100%;\n    height: 40px;\n    margin: 10px auto;\n    font-size: 1em;\n    padding-left: 5px;\n  }\n  textarea {\n    display: block;\n    width: 100%;\n    height: auto;\n    margin: 10px auto;\n    font-size: 1em;\n    padding: 10px 0 0 5px;\n  }\n  .submit {\n    margin-right: 10px;\n    padding: 10px;\n    text-align: center;\n    color: #ffffff;\n    background-color: #000000;\n    border-color: #7a7a7a;\n    border-radius: 3px;\n    font-weight: 100;\n  }\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    form {\n      width: 80%;\n    }\n  }\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    form {\n      width: 90%;\n    }\n  }\n`;\nconst PostForm = () => {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  let navigate = useNavigate();\n  let token = localStorage.getItem('bearer');\n\n  const createNewPost = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`https://rt-blog-api.herokuapp.com/posts`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          title,\n          text,\n        }),\n      });\n      const data = await response.json();\n      if (data.errors) {\n        let errorMessages = [];\n        data.errors.forEach((error) => {\n          errorMessages.push(`${error.msg} `);\n        });\n        setError(errorMessages);\n      } else {\n        setError('');\n        setMessage(data.message);\n        setTimeout(() => {\n          navigate('/posts');\n        }, 1500);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <NewPost>\n      <h1>Create New Post</h1>\n      <form onSubmit={createNewPost}>\n        <label htmlFor=\"postTitle\">Title:</label>\n        <input\n          type=\"text\"\n          id=\"newPostTitle\"\n          onChange={(e) => setTitle(e.target.value)}\n          required\n        />\n        <label htmlFor=\"postText\">Text:</label>\n        <textarea\n          id=\"newPostText\"\n          rows=\"5\"\n          cols=\"33\"\n          maxLength=\"500\"\n          onChange={(e) => setText(e.target.value)}\n          required\n        />\n        <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n      </form>\n      {error ? <ErrorMessage>Error: {error}</ErrorMessage> : <></>}\n      <SuccessMessage>{message}</SuccessMessage>\n    </NewPost>\n  );\n};\n\nexport default PostForm;\n","import React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst CommentContainer = styled.div`\n  height: auto;\n  width: 100%;\n  margin: 10px 0;\n  padding: 10px;\n  background: #ffffff;\n  border-radius: 5px;\n  border: 0.5px solid #e5e5e5;\n  button {\n    background: #14213d;\n    margin-right: 5px;\n    width: 30px;\n    height: 30px;\n  }\n  .delete-btn {\n    color: #ca7d02;\n    margin: 5px 0;\n  }\n`;\nconst CommentHeader = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    flex-flow: column-reverse nowrap;\n  }\n`;\nconst Author = styled.p`\n  margin-bottom: 20px;\n  color: #7a7a7a;\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    padding-top: 10px;\n  }\n`;\n\nconst CommentDetail = (props) => {\n  const author = props.comment.author;\n  const commentDate = props.comment.commentDate;\n  const text = props.comment.text;\n  const commentId = props.comment._id;\n  const message = props.message;\n  const setMessage = props.setMessage;\n  const error = props.error;\n  const setError = props.setError;\n  const parseEntities = (text) =>\n    new DOMParser().parseFromString(text, 'text/html').body.innerText;\n  let params = useParams();\n  let navigate = useNavigate();\n  let token = localStorage.getItem('bearer');\n\n  const deleteComment = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `https://rt-blog-api.herokuapp.com/posts/${params.id}/comments/${commentId}`,\n        {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n      if (response.status === 200) {\n        setMessage(data.message);\n        setTimeout(() => {\n          navigate(0);\n        }, 1500);\n      }\n    } catch (err) {\n      console.log(err.message);\n      setError(err.status);\n    }\n  };\n\n  return (\n    <CommentContainer>\n      <CommentHeader>\n        <Author>\n          {author} • {commentDate}\n        </Author>\n        <button>\n          <FontAwesomeIcon\n            icon={faTrashAlt}\n            className=\"delete-btn\"\n            onClick={deleteComment}\n          />\n        </button>\n      </CommentHeader>\n      <p>{parseEntities(text)}</p>\n    </CommentContainer>\n  );\n};\n\nexport default CommentDetail;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport LoadingIndicator from './shared/LoadingIndicator';\nimport ErrorMessage from './shared/ErrorMessage';\nimport SuccessMessage from './shared/SuccessMessage';\nimport CommentDetail from './CommentDetail';\n\nconst Editor = styled.div`\n  margin: 80px auto 0 auto;\n  display: flex;\n  flex-flow: column wrap;\n  align-content: center;\n  form {\n    margin: 20px auto;\n    width: 40vw;\n  }\n  input,\n  button {\n    font-size: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    border-radius: 3px;\n    border: 1px solid #7a7a7a;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n\n  #postTitle {\n    display: block;\n    width: 100%;\n    height: 40px;\n    margin: 10px auto;\n    font-size: 1em;\n    padding-left: 5px;\n  }\n  textarea {\n    display: block;\n    width: 100%;\n    height: auto;\n    margin: 10px auto;\n    font-size: 1em;\n    padding: 10px 0 0 5px;\n  }\n  .submit,\n  .publish {\n    margin-right: 10px;\n    padding: 10px;\n    text-align: center;\n    color: #ffffff;\n    background-color: #000000;\n    border-color: #7a7a7a;\n    border-radius: 3px;\n    font-weight: 100;\n  }\n  .publish {\n    background-color: #466ec3;\n  }\n  .delete {\n    padding: 10px;\n    text-align: center;\n    background-color: #14213d;\n    border-color: #14213d;\n    border-radius: 3px;\n    color: #ffffff;\n    font-weight: 100;\n  }\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    form {\n      width: 80%;\n    }\n  }\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    form {\n      width: 100%;\n    }\n    width: 90%;\n  }\n`;\nconst FormButtons = styled.div`\n  display: inline;\n`;\n\nconst PostEditor = () => {\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const parseEntities = (text) =>\n    new DOMParser().parseFromString(text, 'text/html').body.innerText;\n  let params = useParams();\n  let navigate = useNavigate();\n  let token = localStorage.getItem('bearer');\n\n  useEffect(() => {\n    async function fetchBlogPostAPI() {\n      setLoading(true);\n      try {\n        const response = await fetch(\n          `https://rt-blog-api.herokuapp.com/posts/${params.id}`\n        );\n        const data = await response.json();\n        setTitle(data.post.title);\n        setText(data.post.text);\n        setComments(data.post.comments);\n      } catch (err) {\n        console.log(err);\n      }\n      setLoading(false);\n    }\n    fetchBlogPostAPI();\n  }, []);\n  const updatePost = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `https://rt-blog-api.herokuapp.com/posts/${params.id}`,\n        {\n          method: 'PUT',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            title,\n            text,\n          }),\n        }\n      );\n      const data = await response.json();\n      if (data.errors) {\n        let updateErrors = [];\n        data.errors.forEach((error) => {\n          updateErrors.push(`${error.msg} `);\n        });\n        setError(updateErrors);\n      } else {\n        setError('');\n        setMessage(data.message);\n        setTimeout(() => {\n          navigate('/posts');\n        }, 1500);\n      }\n    } catch (err) {\n      console.log(err);\n      setError(\n        `There was a problem with updating your post. Check if you're logged in.`\n      );\n    }\n  };\n  const publishPost = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `https://rt-blog-api.herokuapp.com/posts/${params.id}/publish`,\n        {\n          method: 'PUT',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n      if (response.status === 200) {\n        setError('');\n        setMessage(data.message);\n        setTimeout(() => {\n          navigate('/posts');\n        }, 1500);\n      }\n    } catch (err) {\n      console.log(err);\n      setError(\n        `There was a problem with publishing your post. Check if you're logged in.`\n      );\n    }\n  };\n  const deletePost = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\n        `https://rt-blog-api.herokuapp.com/posts/${params.id}`,\n        {\n          method: 'DELETE',\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n      if (response.status === 200) {\n        setError('');\n        setMessage(data.message);\n        setTimeout(() => {\n          navigate('/posts');\n        }, 1500);\n      }\n    } catch (err) {\n      console.log(err);\n      setError(\n        `There was a problem with deleting your post. Check if you're logged in.`\n      );\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <LoadingIndicator />\n      ) : (\n        <Editor>\n          <h1>Post Editor</h1>\n          <form onSubmit={updatePost}>\n            <label htmlFor=\"postTitle\">Title:</label>\n            <input\n              defaultValue={parseEntities(title)}\n              type=\"text\"\n              id=\"postTitle\"\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n            <label htmlFor=\"postText\">Text:</label>\n            <textarea\n              value={parseEntities(text)}\n              id=\"postText\"\n              rows=\"5\"\n              cols=\"33\"\n              maxLength=\"500\"\n              onChange={(e) => setText(e.target.value)}\n              required\n            />\n            <FormButtons>\n              <input className=\"submit\" type=\"submit\" value=\"Update Post\" />\n              <button className=\"publish\" type=\"button\" onClick={publishPost}>\n                Publish\n              </button>\n              <button className=\"delete\" type=\"button\" onClick={deletePost}>\n                Delete\n              </button>\n            </FormButtons>\n          </form>\n          {error ? <ErrorMessage>Error: {error}</ErrorMessage> : <></>}\n          <SuccessMessage>{message}</SuccessMessage>\n          <div>\n            <h1>Comments</h1>\n            {comments && comments.length > 0 ? (\n              comments.map((comment) => {\n                return (\n                  <div key={comment._id}>\n                    <CommentDetail\n                      comment={comment}\n                      message={message}\n                      setMessage={setMessage}\n                      error={error}\n                      setError={setError}\n                    />\n                  </div>\n                );\n              })\n            ) : (\n              <p>There are no comments.</p>\n            )}\n          </div>\n        </Editor>\n      )}\n    </>\n  );\n};\n\nexport default PostEditor;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport Login from './components/Login';\nimport PostForm from './components/PostForm';\nimport PostEditor from './components/PostEditor';\n\nfunction App() {\n  const [authorizedUser, setAuthorizedUser] = useState(false);\n  const [userData, setUserData] = useState('');\n\n  useEffect(() => {\n    let user = localStorage.getItem('bearer');\n    let name = localStorage.getItem('name');\n    if (user) {\n      setAuthorizedUser(true);\n      setUserData(name);\n    } else {\n      setAuthorizedUser(false);\n      setUserData('');\n    }\n  }, []);\n\n  return (\n    <Router basename=\"/\">\n      <Nav\n        authorizedUser={authorizedUser}\n        setAuthorizedUser={setAuthorizedUser}\n        setUserData={setUserData}\n      />\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={\n            !authorizedUser ? (\n              <Login\n                setAuthorizedUser={setAuthorizedUser}\n                setUserData={setUserData}\n              />\n            ) : (\n              <Home userData={userData} />\n            )\n          }\n        ></Route>\n        <Route\n          path=\"/posts\"\n          element={\n            !authorizedUser ? (\n              <Login\n                setAuthorizedUser={setAuthorizedUser}\n                setUserData={setUserData}\n              />\n            ) : (\n              <Home userData={userData} />\n            )\n          }\n        />\n        <Route\n          path=\"/posts/:id\"\n          element={\n            !authorizedUser ? (\n              <Login\n                setAuthorizedUser={setAuthorizedUser}\n                setUserData={setUserData}\n              />\n            ) : (\n              <PostEditor />\n            )\n          }\n        />\n        <Route path=\"/posts/create\" element={<PostForm />} />\n        <Route\n          path=\"/login\"\n          element={\n            <Login\n              setAuthorizedUser={setAuthorizedUser}\n              setUserData={setUserData}\n            />\n          }\n        />\n        <Route path=\"/signup\" element={<SignUp />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}